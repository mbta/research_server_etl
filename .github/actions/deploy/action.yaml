name: Deploy to Environment
description: Build Docker Image, Push it to ECR, Create new ECS Task Definition, Deploy it to ECS Service

permissions:
  id-token: write
  contents: read
inputs:
  docker-repo:
    description: ECR Docker Repo to Push to
    required: true
  env-name:
    description: One of 'prod' or 'staging'
    required: true
  role-to-assume:
    description: AWS_ROLE_ARN
    required: true
  do-update-event-rule:
    description: Update run event rule with new task?
    required: true
    default: 'true'

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: us-east-1
    - name: Build and Push Docker Image
      uses: mbta/actions/build-push-ecr@v2
      id: build-push-ecr
      with:
        docker-repo: ${{ inputs.docker-repo }}
    - name: Deploy to ECS
      id: deploy-ecs
      run: ${{ github.action_path }}/deploy.sh
      shell: bash
      env:
        ECS_CLUSTER: opmi-etl
        ECS_SERVICE: opmi-etl-${{ inputs.env-name }}
        ECS_TASK_DEF: opmi-etl-${{ inputs.env-name }}
        DOCKER_TAG: ${{ steps.build-push-ecr.outputs.docker-tag }}
        DO_UPDATE_EVENT_RULE: ${{ inputs.do-update-event-rule }}
 